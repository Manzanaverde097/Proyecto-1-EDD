package Ventanas;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import EDD.Grafo;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JFileChooser;
import EDD.Lista;
import EDD.Vertice;
import javax.swing.JOptionPane;

/**
 *
 * @author vyckh
 */
public class Cargar extends javax.swing.JFrame {

    static Grafo grafo;
    static Lista diccionarioDePalabras;

    /**
     * Creates new form Bienvenida
     *
     * @param g
     */
    public Cargar(Grafo g) {
        Cargar.grafo = g;
        initComponents();
        this.setVisible(true);
        this.setResizable(false);
        this.setLocationRelativeTo(null);

    }

    private void abrirArchivo() {
        try {
            JFileChooser file = new JFileChooser();
            file.showOpenDialog(this);

            File abre = file.getSelectedFile();

            if (abre != null) {
                try (BufferedReader lee = new BufferedReader(new FileReader(abre))) {
                    String aux = lee.readLine(); // Leemos la primera línea
                    grafo = new Grafo();
                    if (aux.equals("dic")) {
                        // Lógica para cargar el diccionario
                        diccionarioDePalabras = new Lista();
                        while ((aux = lee.readLine()) != null && !aux.equals("/dic")) {
                            diccionarioDePalabras.agregar(aux.trim().toUpperCase());
                            this.txtCargado.setText(this.txtCargado.getText() + aux.trim().toUpperCase() + "\n");
                        }
                        JOptionPane.showMessageDialog(this, "Diccionario cargado (" + diccionarioDePalabras.getTamano() + " palabras)", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    }
                    grafo.diccionario = diccionarioDePalabras;
                    aux = lee.readLine(); // Leemos la primera línea

                    if (aux.equals("tab")) {
                    // Lógica para cargar el tablero
                    int contadorLetras = 0;
                    String lineaLetras = lee.readLine(); // Leemos la línea completa de letras
                    
                    if (lineaLetras != null) {
                        String[] letras = lineaLetras.split(",");
                        
                        // Verificamos que hay exactamente 16 letras (para un tablero 4x4)
                        if (letras.length != 16) {
                            JOptionPane.showMessageDialog(this, "El tablero debe contener exactamente 16 letras", "Error", JOptionPane.ERROR_MESSAGE);
                            return;
                        }
                        
                        // Procesamos las 16 letras
                        for (int i = 0; i < letras.length; i++) {
                            char letra = letras[i].charAt(0);
                            int fila = i / 4;    // Entero división por 4 (0-3)
                            int columna = i % 4;  // Resto de división por 4 (0-3)
                            
                            Vertice v = new Vertice(letra, fila, columna);
                            grafo.agregarVertice(v);
                        }
                        
                        grafo.establecerAdyacencias();
                        JOptionPane.showMessageDialog(this, "Tablero 4x4 cargado correctamente", "Éxito", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
                else {
                    JOptionPane.showMessageDialog(this, "Formato no reconocido. Debe comenzar con 'dic' o 'tab'", "Error", JOptionPane.ERROR_MESSAGE);
                }
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(this, "Error de lectura: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCargado = new javax.swing.JTextArea();
        buscar = new javax.swing.JButton();
        cargar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Cargue el txt por favor:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 20, 340, 40));

        txtCargado.setColumns(20);
        txtCargado.setRows(5);
        jScrollPane1.setViewportView(txtCargado);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 110, 310, 240));

        buscar.setText("Buscar TXT");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });
        jPanel1.add(buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, -1, -1));

        cargar.setText("Cargar");
        cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarActionPerformed(evt);
            }
        });
        jPanel1.add(cargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 360, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 440));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        this.abrirArchivo();

    }//GEN-LAST:event_buscarActionPerformed

    private void cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarActionPerformed
        // TODO add your handling code here:

        Bienvenida m = new Bienvenida(grafo);
        this.dispose();
    }//GEN-LAST:event_cargarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cargar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cargar(grafo).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JButton cargar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtCargado;
    // End of variables declaration//GEN-END:variables
}
